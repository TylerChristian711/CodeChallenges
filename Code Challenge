All code Challanges can be found on leetcode and there id and name will be added along with my solutions to the problem
43. Multiply Strings medium:
   def multiply(self, num1: str, num2: str) -> str:
        num1AsInt = int(num1)
        num2AsInt = int(num2)
        aboutToBeStr = num1AsInt * num2AsInt
        finalStr = str(aboutToBeStr)
        return finalStr
        
747. Largest Number At Least Twice of Others easy:
    def dominantIndex(self, nums: List[int]) -> int:
        maxValue = max(nums)
        newList = [x for x in nums if x != 0 and x != maxValue]
        
        for x in newList:
            if maxValue / x < 2:
                return -1
            
        
        return nums.index(maxValue)
        
        
1108. Defaning an IP address:
      def defangIPaddr(self, address: str) -> str:
        defanged_IP = address.replace(".", "[.]")
        return defanged_IP
        
        
        
1342 Number of steps till zero:
       def numberOfSteps (self, num: int) -> int:
          stepCount = 0 
         while num != 0:
            
             if num %2 != 0:
                  num -= 1
                  stepCount += 1
                
             elif  num % 2 == 0:
                  num = num / 2 
                  stepCount += 1 
        return stepCount    
      
      
